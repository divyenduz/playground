name: Create Xata Dev Branch

on:
  pull_request:
    ignore-branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3
  XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
  XATA_ORGANIZATIONID: xata
  XATA_PROJECTID: prj_jguu616jgl01ndjuafpqcm5dbc
  XATA_BRANCHID: cqphlv1bat2p12u5iq67plkbl8
  XATA_BRANCHNAME: main
  XATA_DATABASENAME: app

permissions:
  id-token: write
  contents: write
  packages: write
  pages: write
  pull-requests: write

jobs:
  xata-dev-branch:
    name: Xata Dev Branch
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Find Previous Comment
        id: find-comment
        uses: peter-evans/find-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: "Xata Dev Branch"

      - uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
          # This makes the PR pushed to use GITHUB_TOKEN and trigger the checks
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Install Xata CLI
        run: |
          curl -fsSL https://xata.io/install.sh | bash
          echo "/home/runner/.config/xata/bin" >> $GITHUB_PATH

      # TODO(alternate-checkout)
      # - name: Initialize Xata
      #   run: xata init --organization ${{ secrets.XATA_ORGANIZATIONID }} --project ${{ secrets.XATA_PROJECTID }} --branch ${{ secrets.XATA_BRANCHID }}

      - name: Check Xata Status
        run: |
          xata status
          xata roll status
          xata branch view

      - name: Check Xata main branch pgroll status
        id: xata-main-branch-roll-status
        run: |
          echo XATA_MAIN_BRANCH_ROLL_STATUS=`xata roll status | jq -r '.status'` >> $GITHUB_OUTPUT

      - name: Create or Update Comment
        id: create_comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ### Xata Dev Branch

            Creating Xata Dev Branch for commit: ${{ github.sha }} / ${{ github.head_ref }}_${{ github.event.pull_request.number }}
            ${{ steps.xata-main-branch-roll-status.outputs.XATA_MAIN_BRANCH_ROLL_STATUS == 'In progress' && 'Warning: A migration is currently running on the main branch. Please wait for it to complete before merging this PR.' || '' }}

            *Please wait for the comment to be updated with branch details.*

      - name: Delete Any Existing Xata Dev Branch
        run: xata branch delete ${{ github.head_ref }}_${{ github.event.pull_request.number }} --yes
        continue-on-error: true

      - name: Create Xata Dev Branch
        run: xata branch create --name ${{ github.head_ref }}_${{ github.event.pull_request.number }}

      # TODO(alternate-checkout)
      # - name: Checkout Xata Dev Branch
      #   run: |
      #     xata branch checkout ${{ github.head_ref }}_${{ github.event.pull_request.number }}

      - name: Checkout Xata Dev Branch
        run: |
          echo XATA_BRANCHID=`xata branch checkout ${{ github.head_ref }}_${{ github.event.pull_request.number }} --json | jq -r '.id'` >> $GITHUB_ENV

      - name: Check Xata Branch Status
        run: xata branch view

      - name: Wait for Branch to be healthy
        run: xata branch wait-ready ${{ github.head_ref }}_${{ github.event.pull_request.number }}

      - name: Complete Any Pending Migrations (interited from main)
        if: ${{ steps.xata-main-branch-roll-status.outputs.XATA_MAIN_BRANCH_ROLL_STATUS == 'In progress' }}
        run: |
          xata roll complete

      # TODO(long-backfills): What about backfills that take much longer? (probably not for MVP)
      # we might have to split migrate and backfill and use checks API to block the PR until the backfill is done
      - name: Apply Xata Roll Migrations
        run: xata roll migrate

      # TODO(search-path-preview): setup search path with the preview URL
      # TODO(search-path-preview-via-main): setup search path with the preview URL for the main branch (to test the main branch to confirm zero downtime)
      # TODO(search-path-production): setup search path with the production URL after merge
      - name: Get Latest Schema
        id: xata-roll-get-latest-schema
        run: |
          echo LATEST_SCHEMA=`xata roll latest --with-schema=true` >> $GITHUB_OUTPUT

      - name: Setup New Preview Environment
        run: |
          echo DATABASE_URL=`xata branch url` >> $GITHUB_ENV
          echo SEARCH_PATH=${{ steps.xata-roll-get-latest-schema.outputs.LATEST_SCHEMA }} >> $GITHUB_ENV

      - name: Print Environment Variables
        run: |
          echo DATABASE_URL=${{ env.DATABASE_URL }}
          echo SEARCH_PATH=${{ env.SEARCH_PATH }}

      - name: Update Comment with Branch Details
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ### Xata Dev Branch

            Created Xata Dev Branch for commit: ${{ github.sha }} / ${{ github.head_ref }}_${{ github.event.pull_request.number }}
            ${{ steps.xata-main-branch-roll-status.outputs.XATA_MAIN_BRANCH_ROLL_STATUS == 'In progress' && 'Warning: A migration is currently running on the main branch. Please wait for it to complete before merging this PR.' || '' }}

            Set the following schemas as the search_path:
            ```
            ${{ steps.xata-roll-get-latest-schema.outputs.LATEST_SCHEMA }}
            ```

            You can drop into the psql shell for this branch with the following command:
            ```
            xata branch checkout ${{ github.head_ref }}_${{ github.event.pull_request.number }}
            psql `xata branch url`
            ```

            | Xata Branch URL |
            |---|
            | [Branch Link](https://app.staging.maki.cooking/organizations/123xyz/projects/prj_i3qsq56h3p3d3crnk7htnc75d0/branches/s99l2grl6d3nr1cqcbaaa5piic) |
